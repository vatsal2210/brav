<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Brav</title>
    <link rel="stylesheet" href="../styles/bootstrap.css" type="text/css">
    <link rel="stylesheet" href="../styles/font-awesome.min.css" type="text/css">
    <link rel='stylesheet' href='../styles/fullcalendar.min.css' />
    <link rel='stylesheet' href='../styles/fullcalendar.print.min.css' />
    <link rel='stylesheet' href='../styles/scheduler.min.css' />
    <link rel="stylesheet" href="../styles/style.css" type="text/css">

    <script src="../js/jquery.min.js"></script>
    <script src="../js/bootstrap.min.js"></script>
    <script src="../js/sweet-alert.min.js"></script>
    <script src='../js/moment.min.js'></script>
    <script src='../js/fullcalendar.min.js'></script>
    <script src='../js/scheduler.js'></script>
    <!-- <script src='../js/app.js'></script> -->

</head>

<body style="background: #FFF">
    <div class="video-call">
        <div class="top-header">
            <img src="images/header-logo.png" alt="">
        </div>
        <div class="top-header-right">
            <ul>
                <li><a href="#" id="chat"><i class="fa fa-comments" aria-hidden="true"></i></a></li>
                <li><a href="/note/create" id="notes"><i class="fa fa-pencil-square" aria-hidden="true"></i></a></li>
                <li><a href="#" id="alert-msg"><i class="fa fa-bell-o" aria-hidden="true"></i></a></li>
                <li><a href="#"><img src="images/user-img.jpg" class="user-img" alt=""></a></li>
            </ul>
        </div>

    </div>
    <!--video-call divion closed -->
    <div class="left-side-bar">
        <ul>
            <li><a href="/note/view"><i class="fa fa-file-text-o" aria-hidden="true"></i></a></li>

            <li class="active">
                <a href="/task">
                    <i class="fa fa-calendar" aria-hidden="true"></i>
                </a>
            </li>
            <li id="mediator">
                <a>
                    <i class="fa fa-video-camera" aria-hidden="true"></i>
                </a>
            </li>
        </ul>
    </div>
    <div class="right-popup">
        <div class="chat-panel" style="display: none">
            <div class="user-container">
                <ul id="users">

                </ul>
            </div>
        </div>
        <div class="notes-panel" style="display: none"></div>
        <div class="alert-panel" style="display: none"></div>
        <div class="profile-edit text-center" style="display: none">
            <img src="../images/user-img.jpg" alt="">
            <div class="your-account">
                <a href="/profile">Your Account</a>
            </div>
            <div class="logout">
                <a href="#" id="logout">Logout</a>
            </div>

        </div>
    </div>
    <div class="right-side-panel">
        <div class="container container-top-margin">
            <a href="/schedule" class="add-schedule-btn"><i class="fa fa-plus" aria-hidden="true"></i></a>
            <!-- <div id="calendar"></div> -->
            <div id='calendar'></div>
        </div>
    </div>

    <div class="chat-container">
        <ul id="chats">
        </ul>
    </div>
    <!--right-side-panel closed -->
    <script>
        $(document).ready(function () {
            
            $('#calendar').fullCalendar({
                editable: true, // enable draggable events
                aspectRatio: 1.8,
                scrollTime: '00:00', // undo default 6am scrollTime
                header: {
                    left: 'today prev,next',
                    center: 'title',
                    right: 'agendaWeek,month'//timelineDay,timelineThreeDays,
                },
                resourceLabelText: 'Rooms',
                events: {
                    url: '/schedule/getschedule',
                    textColor: 'black'
                }
            });

            getOnlineUsers();

            function getOnlineUsers() {
                $.ajax({
                    url: '/user/online',
                    method: 'GET',
                    success: function (res) {
                        console.log('onlineuser res', res)
                        if (res.success && res.data.length > 0) {
                            var _list = $('#users');
                            var id = JSON.parse(sessionStorage.getItem('bravUser'))['id'];
                            for (var i = 0; i < res.data.length; i++) {
                                if (res.data[i].id != id)
                                    _list.append('<li class="client" data-id="' + res.data[i].id + '" data-name="' + res.data[i].firstname + ' ' + res.data[i].lastname + '">' + res.data[i].firstname + ' ' + res.data[i].lastname +
                                        '</li>');
                                else if (res.data[i].id == id) //temporary
                                    currentUser = res.data[i];

                            }
                        } else {

                        }
                    },
                    error: function (err) {
                        console.log('Login error', err);
                        $('#errMsg').text(err.msg);
                    },
                    dataType: 'JSON'
                });
            }
            //connect to the peering server

            let connectedPeers = {};
            let connectedCall = {};
            let isInCall = false;
            let loggedUser = JSON.parse(sessionStorage.getItem('bravUser'));

            let peer = new Peer(loggedUser.id, {
                host: '/',
                port: 5103,
                path: '/api'
            });

            // Show this peer's ID.
            peer.on('open', function (id) {
                console.log('ID :::: ', id);
            });

            // Await connections from others
            peer.on('connection', connect);

            peer.on('error', function (err) {
                swal(err);
            });
            peer.on('close', function (err) {
                swal(err + ' closed');
            });

            function sendMsg(msg, id) {
                if (msg && id) {
                    var user = loggedUser;
                    var c = peer.connect(id, {
                        label: 'chat',
                        serialization: 'none',
                        metadata: {
                            message: msg,
                            name: user.firstname + ' ' + user.lastname
                        }
                    });
                    c.on('open', function () {
                        c.send(msg)
                    });
                }
            }

            function connect(c) {
                // Handle a chat connection.

                if (c.label === 'chat') {

                    var id = c.peer;
                    var _main = $('#chats');
                    var _li = $('<li id="chat-container'+id+'"></li>');
                    var container = $(_main).find('#chat-container' + id);
                    if (container && container.length == 0) {
                        container = getChatContainer(id, c.metadata.name);
                        $(_main).append($(_li).append($(container)));
                    }else{
                    //    container.a 
                    }
                    c.on('data', function (data) {
                        var _msg = $('<p class="chat-msg text-right">' + data + '</p>');
                        $('#chat-text' + id).append(_msg)
                        console.log('peer', peer);
                    });
                    c.on('close', function () {
                        swal(c.peer + ' has left the chat.');
                        $('#chat-container' + id).remove();
                        delete connectedPeers[c.peer];
                    });
                    connectedPeers[c.peer] = c;
                } else if (c.label === 'file') {
                    c.on('data', function (data) {
                        // If we're getting a file, create a URL for it.
                        if (data.constructor === ArrayBuffer) {
                            var dataView = new Uint8Array(data);
                            var dataBlob = new Blob([dataView]);
                            var url = window.URL.createObjectURL(dataBlob);
                            $('#' + c.peer).find('.messages').append('<div><span class="file">' +
                                c.peer + ' has sent you a <a target="_blank" href="' + url + '">file</a>.</span></div>');
                        }
                    });
                    connectedPeers[c.peer] = c;
                } else if (c.label === 'call') {

                    connectedPeers[c.peer] = c;
                }
                console.log('connectedPeers', connectedPeers)
            }


            function getChatContainer(id, name) {
                if (id) {
                    return $('<p class="chat-header">' + name.toUpperCase() +
                        '<span data-id="' + id + '" class="chat-call-cancel" id="chat-call-remove' + id + '">x</span></p>' +
                        '<div class="chat-text" id="chat-text' + id + '"></div>' +
                        '<input type="text" class="chat-box" id="chat-box' + id + '" data-id="' + id + '">' +
                        '<i  class="send fa fa-paper-plane" data-id="' + id + '" aria-hidden="true"></i>');
                } else return false;
            }

            $(document).on('click', '.client', function () {
                var id = $(this).attr('data-id');
                var name = $(this).attr('data-name');
                // connect(id);
                var _main = $('#chats');
                var _li = $('<li id="chat-container' + id + '"></li>');
                var container;
                console.log($('#chat-container' + id))
                if ($(_main).children().find('#chat-call-remove' + id).length == 0) {
                    $(".chat-panel").hide();
                    container = getChatContainer(id, name);
                    $(_main).append($(_li).append($(container)));
                } else if ($(_main).children().find('#chat-call-remove' + id).length == 1) {
                    $(".chat-panel").hide();
                    $('#chat-container' + id).show();
                }
            });

            $(document).on('click', '.chat-header', function () {
                $(this).siblings('.chat-box').toggle();
                $(this).siblings('.chat-text').toggle();
                $(this).siblings('.send').toggle();
            });

            $(document).on('click', '.chat-call-cancel', function (e) {
                e.stopPropagation();
                var id = $(this).attr('data-id');
                $('#chat-container' + id).hide();
            });
            
            $(document).on('click', '.send', function () {
                var _id = $(this).attr('data-id');
                var m = $('#chat-box' + _id).val();
                if (m) {
                    var _chatWindow = $('#chat-text' + _id);
                    var _msg = $('<p class="chat-msg">' + $('#chat-box' + _id).val() + '</p>');
                    $(_chatWindow).append(_msg);
                    $('#chat-box' + _id).val('');
                    sendMsg(m, _id);
                }
            });
            $(document).on('keypress', '.chat-box', function (key) {
                console.log('evet', key)
                if (key.keyCode == 13) {

                    var _id = $(this).attr('data-id');
                    var m = $('#chat-box' + _id).val();
                    if (m) {
                        var _chatWindow = $('#chat-text' + _id);
                        var _msg = $('<p class="chat-msg">' + $('#chat-box' + _id).val() + '</p>');
                        $(_chatWindow).append(_msg);
                        $('#chat-box' + _id).val('');
                        sendMsg(m, _id);
                    }
                    // handleMsg($(this).attr('data-id'), $('#chat-box' + $(this).attr('data-id')).val())
                }
            });

            function handleMsg(_id, _msg) {
                if (_id && _msg) {
                    $('#chat-text' + _id).append(_msg);
                    $('#chat-box' + _id).val('');
                    sendMsg(_msg, _id);
                }
            }
        });
    </script>
</body>

</html>